package com.bodyFit.dao;

import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.bodyFit.model.Users;
import com.bodyFit.model.UsersRowMapper;


@Transactional
@Repository
public class UsersDAOimpl implements UsersDAO {
	@Autowired
    private JdbcTemplate jdbcTemplate;

	@Override
	public List<Users> getAllUsers() {
		String sql = "SELECT id_user, name_user, firstName_user, mail_user,  password_user FROM users";
		RowMapper<Users> rowMapper = new UsersRowMapper();
		return this.jdbcTemplate.query(sql, rowMapper);
	}

	@Override
	public Users getUsersById(int id_user) {
		String sql = "SELECT id_user, name_user, firstName_user,  mail_user,  password_user FROM users WHERE id_user = ?";
		RowMapper<Users> rowMapper = new BeanPropertyRowMapper<Users>(Users.class);
		Users users = jdbcTemplate.queryForObject(sql, rowMapper, id_user);
		return users;
	}

	@Override
	public void addUsers(Users users) {
		//add users
		String sql = "INSERT INTO users ( id_user, name_user, firstName_user, mail_user,  password_user) values (?, ?, ?, ?, ?,)";
		jdbcTemplate.update(sql, users.getId_user(), users.getName_user(), users.getFirstName_user(), users.getMail_user(), users.getPassword_user());

		
	}

}
